stages:
  - test
  - analysis
  - docker
  - deploy

cache:
  paths:
    - vendor/

test:
  image: $BUILDIMAGE
  coverage: '/^\s*Lines:\s*\d+.\d+\%/'
  before_script:
    - apt-get update && apt-get install -y php-sqlite3 php-ast
    - composer global require pdepend/pdepend squizlabs/php_codesniffer phpmd/phpmd phploc/phploc sebastian/phpcpd phan/phan
    - mkdir -p build/logs
  script:
    - cp -n .env.example .env
    - npm install
    - npm run production
    - composer install --no-suggest --no-progress
    - php artisan key:generate
    - php artisan test --parallel --coverage-text --log-junit junit-report.xml --coverage-cobertura cobertura-report.xml
  artifacts:
    when: always
    expire_in: 1month
    paths:
      - build
      - coverage
      - clover.xml
    reports:
      junit: junit-report.xml
      coverage_report:
        coverage_format: cobertura
        path: cobertura-report.xml

security-check:
  image: $BUILDIMAGE
  stage: analysis
  script:
    - local-php-security-checker

static analysis:
  image: $BUILDIMAGE
  stage: analysis
  before_script:
    - composer install --no-suggest --no-progress
  script:
    - ./vendor/bin/phpstan analyse

code style:
  image: $BUILDIMAGE
  stage: analysis
  before_script:
    - composer install --no-suggest --no-progress
  script:
    - ./vendor/bin/pint --test

build docker:
  image: docker:20.10
  stage: docker
  needs:
    - test
  cache: []
  services:
    - docker:20.10-dind
  variables:
    DOCKER_TLS_CERTDIR: ''
  script:
    - echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - docker build -f Dockerfile -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA

deploy docker:
  image: docker:20.10
  stage: docker
  needs:
    - build docker
  cache: []
  services:
    - docker:20.10-dind
  variables:
    DOCKER_TLS_CERTDIR: ''
  script:
    - echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - echo $DOCKER_ACCESS_TOKEN | docker login -u $DOCKER_USERNAME --password-stdin
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA pwdsafe/pwdsafe:$CI_COMMIT_SHORT_SHA
    - docker push pwdsafe/pwdsafe:$CI_COMMIT_SHORT_SHA
