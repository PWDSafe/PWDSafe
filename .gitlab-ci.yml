stages:
  - test
  - analysis

cache:
  paths:
    - vendor/
test:
  image: $DOCKERHOST/devpeak-php-ubuntu
  before_script:
    - apt-get update && apt-get install -y php-sqlite3 php-ast
    - composer global require pdepend/pdepend squizlabs/php_codesniffer phpmd/phpmd phploc/phploc sebastian/phpcpd phan/phan
    - mkdir -p build/logs
  script:
    - cp -n .env.example .env
    - npm install
    - npm run production
    - composer install --no-suggest --no-progress
    - php artisan key:generate
    - phpdbg -qrr vendor/bin/phpunit --colors=never
    - ~/.composer/vendor/bin/pdepend --jdepend-xml=build/logs/jdepend.xml --jdepend-chart=build/dependencies.svg --overview-pyramid=build/overview-pyramid.svg app
    - ~/.composer/vendor/bin/phpcs --runtime-set ignore_errors_on_exit 1 --runtime-set ignore_warnings_on_exit 1 --report=checkstyle --report-file=build/logs/checkstyle.xml --standard=ruleset.xml --ignore=provider --extensions=php app tests
    - curl --max-time 5 -X POST -d 'project_id='"$CI_PROJECT_ID"'' -d 'project_namespace='"$CI_PROJECT_NAMESPACE"'' -d 'project_name='"$CI_PROJECT_NAME"'' -d 'metric=checkstyle_violations' -d 'value='"$(cat build/logs/checkstyle.xml |grep "<error"|wc -l)"'' $BUILDMETRICS_URL
    - ~/.composer/vendor/bin/phpmd app xml unusedcode,codesize --reportfile build/logs/pmd.xml --exclude provider --ignore-violations-on-exit
    - ~/.composer/vendor/bin/phploc --count-tests --exclude provider --log-csv build/logs/phploc.csv --log-xml build/logs/phploc.xml app/ tests/
    - curl --max-time 5 -X POST -d 'project_id='"$CI_PROJECT_ID"'' -d 'project_namespace='"$CI_PROJECT_NAMESPACE"'' -d 'project_name='"$CI_PROJECT_NAME"'' -d 'metric=lines_of_code' -d 'value='"$(grep "<loc>" build/logs/phploc.xml |cut -f2 -d">"|cut -f1 -d"<")"'' $BUILDMETRICS_URL
    - ~/.composer/vendor/bin/phpcpd --log-pmd build/logs/pmd-cpd.xml --exclude provider app/ public/ || true
    - curl --max-time 5 -X POST -d 'project_id='"$CI_PROJECT_ID"'' -d 'project_namespace='"$CI_PROJECT_NAMESPACE"'' -d 'project_name='"$CI_PROJECT_NAME"'' -d 'metric=phpcpd_blocks' -d 'value='"$(grep "<duplication" build/logs/pmd-cpd.xml |wc -l)"'' $BUILDMETRICS_URL
    - ~/.composer/vendor/bin/phan -o build/phan.txt || true
    - curl --max-time 5 -X POST -d 'project_id='"$CI_PROJECT_ID"'' -d 'project_namespace='"$CI_PROJECT_NAMESPACE"'' -d 'project_name='"$CI_PROJECT_NAME"'' -d 'metric=phanissues' -d 'value='"$(cat build/phan.txt|wc -l)"'' $BUILDMETRICS_URL
  artifacts:
    when: always
    expire_in: 1month
    paths:
      - build
      - coverage
      - clover.xml

sonarqube:
  stage: analysis
  image: ciricihq/gitlab-sonar-scanner
  variables:
    SONAR_URL: $SONARHOST
    SONAR_ANALYSIS_MODE: publish
  script:
    - /usr/bin/sonar-scanner-run.sh

security-check:
  image: $DOCKERHOST/devpeak-php-ubuntu
  stage: analysis
  script:
    - composer global require sensiolabs/security-checker
    - ~/.composer/vendor/bin/security-checker security:check


phpmetrics:
  image: $DOCKERHOST/devpeak-php-ubuntu
  stage: analysis
  dependencies:
    - test
  script:
    - composer global require phpmetrics/phpmetrics
    - ~/.composer/vendor/bin/phpmetrics --report-html=phpmetrics/html --report-xml=phpmetrics/xml --violations-xml=phpmetrics/violations.xml --chart-bubbles=phpmetrics/chart.svg --extensions=php --offline app
  artifacts:
    when: on_success
    expire_in: 1month
    paths:
      - phpmetrics
